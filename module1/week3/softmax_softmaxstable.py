# -*- coding: utf-8 -*-
"""softmax_softmaxStable.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tf9sK14McL_yaB2dTtwhMFRT6t2hCubl
"""

import torch
import torch.nn as nn

class Softmax(nn.Module):
    def __init__(self):
        super().__init__()

    def forward(self, x):
        return torch.exp(x) / torch.sum(torch.exp(x))

class softmax_stable(nn.Module):
    def __init__(self):
        super().__init__()

    def forward(self, x):
        c = torch.max(x)
        return torch.exp(x - c) / torch.sum(torch.exp(x - c))

data = torch . Tensor ([1 , 2 , 3])
softmax_stable = softmax_stable ()
output = softmax_stable ( data )
output

data = torch . Tensor ([1 , 2 , 3])
softmax = Softmax ()
output = softmax ( data )
output