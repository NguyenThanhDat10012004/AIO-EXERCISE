# -*- coding: utf-8 -*-
"""excercise3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1okUUNV-NzB2eSe6HQdZqIPjfVdsOkuDL
"""

import random
import math
def MAE(pred, target):
  return math.abs(pred - target)
def MSE_RMSE(pred, target):
  return (pred - target)**2
def exercise3():
  n = input(">> Input number of samples ( integer number ) which are generated : ")
  if n.isnumeric() == False:
    print("number of samples must be an integer number")
    return
  else:
    n = int(n)
    function = input("Input loss name : ")
    sum_loss = 0
    for i in range(n):
      pred = random.uniform(0, 10)
      target = random.uniform(0, 10)
      global loss
      if function == "MAE":
        loss = MAE(pred, target)
      else:
        loss = MSE_RMSE(pred, target)
      print(f"loss name : {function} , sample : {i} , pred : {pred} , target : {target} , \n loss : {loss}")
      sum_loss += loss
    if function == "MAE":
      sum_loss = sum_loss / n
    elif function == "MSE":
      sum_loss = sum_loss / n
    else:
      sum_loss = math.sqrt(sum_loss / n)
    print(f"final {function}: {sum_loss} ")

exercise3()

